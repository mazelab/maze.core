<div class="row-fluid">
    <div class="span12" ng-controller="NodeController">
        <div class="row-fluid" id="jsRegisterApi">
            <div class="span10">
                <div class="row-fluid">
                    <alert ng-repeat="alert in response.errors" class="alert-danger">{{alert}}</alert>
                </div>
                <div class="row-fluid">
                    <div class="cssUserImage span2">
                        <img name="avatar" class="img-polaroid" src="<?= $this->baseUrl() ?>/img/{{selected.image}}" alt="<?= $this->translate('avatar') ?>" width="100px">
                    </div>
                    <div class="span9 offset1">
                        <div class="row-fluid cssBigItem">
                            <span>
                                <?= $this->translate('Attention') ?>
                                <?= $this->translate('a new or unregistered node was found') ?>
                            </span>
                        </div>
                        <div class="row-fluid">
                            <span>
                                <?= $this->translate('Report message') ?>
                            </span>
                            <div class="row-fluid">
                                <span>
                                    <?= $this->translate('A new or unregistered node would be connected with Maze dashboard.') ?>
                                </span>
                            </div>
                            <div class="row-fluid">
                                <span>
                                    <?= $this->translate('Please enter what is to happen!') ?>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row-fluid">
                    <mazeDlWrapper label="<?= $this->translate('node type') ?>" dt-class="span3" dd-class="span9">
                        <a href="#" editable-select="node.nodetype" e-ng-options="type.value as type.name for type in nodetypes" e-ng-change="changetype($data);" oncancel="changetype();">
                            {{selected.name}}
                        </a>
                    </mazeDlWrapper>
                    <mazeDlWrapper label="<?= $this->translate('node name'); ?>" dt-class="span3" dd-class="span9">
                        {{node.name}}
                    </mazeDlWrapper>
                    <mazeDlWrapper label="<?= $this->translate('ip address'); ?>" dt-class="span3" dd-class="span9">
                        {{node.ipAddress}}
                    </mazeDlWrapper>
                    <div class="row-fluid">
                        <input class="btn btn-info" type="submit" value="<?= $this->translate('Connecting with Maze.dashboard') ?>" ng-click="create();" />
                        <input class="btn btn-info" type="reset" onclick="history.go(-1);" value="<?= $this->translate('cancel') ?>" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    app.factory('FormElements', function(){
        return {
            form: $("#jsRegisterApi"),
            disable: function(disable){
                angular.element(this.form).find("input, button").each(function(){
                    $this = angular.element(this);
                    $this.prop("disabled", typeof disable === "undefined" ? true : disable);
                    if ($this.prop("disabled") && $this.hasClass("btn") === true){
                        $this.addClass("disabled");
                    } else {
                        $this.removeClass("disabled");
                    }
                });

                return($this);
            }
        };
    });

    app.controller('NodeController', ['$scope', '$filter', 'nodesService', 'logsService', 'FormElements', function($scope, $filter, nodesService, logsService, formElements){
        $scope.node = {contextId: "<?= $this->html("request/contextId"); ?>", nodetype: ""};
        $scope.selected  = {};
        $scope.nodetypes = [
            {name:"<?= $this->translate("Assign a server type"); ?>", value: "", image: "dummy_node_200.png"},
            {name:"<?= $this->translate("Virtual Server"); ?>", value: "virtual", image: "dummy_vm_200.png"},
            {name:"<?= $this->translate("Cloud Server"); ?>‎", value: "cloud", image: "dummy_cloud_200.png"},
            {name:"<?= $this->translate("Dedicated Server"); ?>‎", value: "dedicated", image: "dummy_server_200.png"}
        ];

        $scope.$watch("node.nodetype", function(option){
            $scope.changetype(option);
        });

        $scope.changetype = function(option){
            if (this.selected = $filter("filter")($scope.nodetypes, {value: (option || "")})[0]) {
                $scope.selected = this.selected;
            }
        };

        $scope.create = function(){
            formElements.disable();
            return nodesService.create($scope.node).success(function(response, status){
                $scope.response = response;
                formElements.disable(false);

                if (status === 201) {
                    return location.href = "<?= $this->url(array(), "nodes") ?>";
                }
            });
        };

        formElements.disable();
        logsService.list({context:$scope.node.contextId, type: "conflict"}).success(function(nodes){
            if (nodes && nodes[0] && nodes[0].contextId === $scope.node.contextId) {
                $scope.node = nodes[0].data;
                $scope.node.nodetype = $scope.selected.value;
            }
            formElements.disable(false);
        });
    }]);
</script>
