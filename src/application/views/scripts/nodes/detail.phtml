<div class="row-fluid">
    <div class="span12" ng-controller="NodeController">
        <div class="row-fluid text-left cssBoxCenter">
            <a ng-click="delete($event);" class="jsIconDeleteTxt btn" title="<?= $this->translate("delete node"); ?>">
                <i class="icon-trash"></i> <?= $this->translate("delete"); ?>
            </a>
        </div>
        <div class="row-fluid cssBoxCenter">
            <div class="span10">
                <div class="row-fluid">
                    <div class="cssUserImage span2">
                        <img class="img-polaroid" id="jsImageNodeType" name="avatar" src="<?= $this->baseUrl() ?>/img/dummy_node_200.png" alt="<?= $this->translate('avatar') ?>">
                    </div>
                    <div class="span9 offset1">
                        <dl class="row-fluid cssBigItem">
                            <span class="span9">
                                <?= $this->form->name ?>
                            </span>
                        </dl>
                        <dl class="row-fluid">
                            <dt class="span3">
                            <label>
                                <?= $this->translate('ip address') ?>
                            </label>
                            </dt>
                            <dd class="span7">
                                <?= $this->form->ipAddress ?>
                            </dd>
                        </dl>
                        <dl class="row-fluid">
                            <dt class="span3">
                            <label id="nodetype">
                                Node Type
                            </label>
                            </dt>
                            <dd class="span9">
                                <a href="#" editable-select="node.nodetype" e-ng-options="type.value as type.name for type in nodetypes" onaftersave="setNodetype();">
                                    {{ selectedType || "<?= $this->translate("Assign a server type"); ?>" }}
                                </a>
                            </dd>
                        </dl>
                    </div>
                </div>
                <div class="row-fluid" id="additionalFieldsContent">
                    <maze-additional fields="node" update="update($data)"></maze-additional>
                </div>
            </div>
        </div>
        <div class="row-fluid cssBoxCenter">
            <div class="span12">
                <ul class="nav nav-tabs unstyled" id="tabsNode">
                    <li id="tabTitleNodeServices" class="active">
                        <a data-toggle="tab" href="#tabNodeServices">
                            <?= $this->translate("Service"); ?> (<span class="jsTabServiceCount"><?= count($this->html('services')) ?></span>) 
                        </a>
                    </li>
                    <li id="tabTitleNodeClients">
                        <a data-toggle="tab" href="#tabNodeClients">
                            <?= $this->translate("Clients"); ?> (<span class="jsTabClientCount"><?= count($this->clients) ?></span>)
                        </a>
                    </li>
                    <li id="tabTitleNodeDomains">
                        <a data-toggle="tab" href="#tabNodeDomains">
                            <?= $this->translate("Domains"); ?> (<span class="jsTabDomainCount"><?= count($this->domains) ?></span>)
                        </a>
                    </li>
                    <li id="tabTitleNodeLogs">
                        <a data-toggle="tab" href="#tabNodeLogs">
                            <?= $this->translate("log"); ?>
                        </a>
                    </li>
                </ul>
                <div class="tab-content cssTabContentOuter row-fluid">
                    <div class="active tab-pane" id="tabNodeServices">
                        <?= $this->render('nodes/tabs/services.phtml'); ?>
                    </div>
                    <div class="tab-pane cssTabContentAll" id="tabNodeClients">
                        <?= $this->render('nodes/tabs/clients.phtml'); ?>
                    </div>
                    <div class="tab-pane cssTabContentAll" id="tabNodeDomains">
                        <?= $this->render('nodes/tabs/domains.phtml'); ?>
                    </div>
                    <div class="tab-pane cssTabContentAll" id="tabNodeLogs">
                        <?= $this->render('nodes/tabs/logs.phtml'); ?>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div>
    <script type="text/ng-template" id="ModalNodeDelete.html">
        <div class="modal-header" ng-if="modal.title;">
            <h3 class="modal-title">{{modal.title}}</h3>
        </div>
        <div class="modal-body" ng-if="modal.body;">
            <p>{{modal.body}}</p>
        </div>
        <div class="modal-footer">
            <button class="btn" ng-click="dismiss();"><?= $this->translate("cancel"); ?></button>
            <button class="btn btn-primary" ng-click="confirm();"><?= $this->translate("ok"); ?></button>
        </div>
    </script>
</div>
<script type="text/javascript">
    app.controller('NodeController', ['$scope', '$modal', '$filter', 'nodesService', function($scope, $modal, $filter, nodesService){
        $scope.node = {_id: "<?= $this->html("node/_id"); ?>"};
        $scope.nodetypes = [
            {name:"<?= $this->translate("Virtual Server"); ?>", value: "virtual"},
            {name:"<?= $this->translate("Cloud Server"); ?>‎", value: "cloud"},
            {name:"<?= $this->translate("Dedicated Server"); ?>‎", value: "dedicated"}
        ];

        $scope.$watch("node.nodetype", function(option){
            if (option) {
                $scope.selectedType = $filter('filter')($scope.nodetypes, {value: option})[0].name;
            }
        });

        $scope.update = function(data){
            return nodesService.update($scope.node._id, data).success(function(node){
                $scope.node = node;
            });
        };

        $scope.setNodetype = function(){
            return $scope.update($scope.node);
        };

        $scope.delete = function(event){
            modal().result.then(function(){
                nodesService.delete($scope.node._id).success(function(response, status){
                    if (status === 202) {
                        return location.href = "<?= $this->url(array(), "nodes"); ?>";
                    }
                });
            });

            return event.preventDefault();
        };

        var modal = function(){
            return($modal.open({
                templateUrl: "ModalNodeDelete.html",
                controller : function ($scope, $modalInstance){
                    $scope.modal = {
                        body: "<?= $this->translate("Shall the node really be deleted?"); ?>"
                    };
                    $scope.confirm = $modalInstance.close;
                    $scope.dismiss = function (){
                        $modalInstance.dismiss("cancel");
                    };
                }
            }));
        };

        nodesService.get($scope.node._id).success(function(node){
            $scope.node = node;
        });

    }]);

    $(document).ready(function() {        

        $("select#nodetype").val(function(){
            index = this.options.selectedIndex;
            value = this.options.item(index).value;
            this.nodetype = {
                default   : "dummy_node_200.png",
                virtual   : "dummy_vm_200.png",
                cloud     : "dummy_cloud_200.png",
                dedicated : "dummy_server_200.png"
            };
            this.setNodetype = function( type ){
                if (typeof this.nodetype[type] === "undefined")
                    type = "default";
                $("#jsImageNodeType").attr("src", "<?= $this->baseUrl() ?>/img/" +this.nodetype[type]);
                return type;
            };
            return this.setNodetype(value);
        }).change(function(event){
            event.target.setNodetype(event.target.value);
        });

        $("#jsChangedNodetype").click(function(event){
            event.preventDefault();
            $this = $(this);
            $.ajax({
                url: '<?= $this->url(array($this->html('node/name')), 'nodedetail') ?>?format=json',
                data: $("select#nodetype").serializeArray(),
                type: "post",
                success: function(data){
                    setTooltips(data, $this);
                }
            });
        });

    });
</script>
