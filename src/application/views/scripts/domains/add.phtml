<div class="row-fluid">
    <div class="span12">
        <div class="row-fluid ">
            <div class="cssUserImage span2">
                <img name="avatar" class="img-polaroid" src="<?= $this->baseUrl() ?>/img/dummy_domain_200.png" alt="<?= $this->translate('avatar') ?>">
            </div>
            <div class="span10" ng-controller="DomainController" id="addDomain">
                <maze-dl-wrapper label="<?= $this->translate('domain name *') ?>" dt-class="span3" dd-class="span9">
                    <input type="text" id="name" ng-model="domain.name;">
                    <alert ng-repeat="alert in response.errors.name" class="alert-danger" >{{alert}}</alert>
                </maze-dl-wrapper>
                <maze-dl-wrapper label="<?= $this->translate('domain of client *') ?>" dt-class="span3" dd-class="span9">
                    <a href="#" editable-select="domain.owner" e-ng-options="s._id as s.label for s in clients" id="owner" onaftersave="changeclient($data);">
                        {{selected.label || "<?= $this->translate("Choose client"); ?>"}}
                    </a>
                    <alert ng-repeat="alert in response.errors.owner" class="alert-danger" >{{alert}}</alert>
                </maze-dl-wrapper>
                <maze-dl-wrapper label="<?= $this->translate('procurement place') ?>" dt-class="span3" dd-class="span9">
                    <input type="text" id="procurementplace" ng-model="domain.procurementplace;">
                </maze-dl-wrapper>
                <div class="row-fluid">
                    <input id="jsCancelButton" class="btn btn-info" type="reset" onclick="history.go(-1);" value="<?= $this->translate('cancel') ?>" />
                    <input class="btn btn-info jsButton" type="submit" ng-click="submit($event);" value="<?= $this->translate('save') ?>" />
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var app = angular.module('maze');

    app.factory('FormElements', function(){
        return {
            form: $("#addDomain"),
            disable: function(disable){
                angular.element(this.form).find("input, button").each(function(){
                    $this = angular.element(this);
                    $this.prop("disabled", disable);
                    if (disable && $this.hasClass("btn") === true){
                        $this.addClass("disabled");
                    } else {
                        $this.removeClass("disabled");
                    }
                });

                return($this);
            }
        };
    });

    app.controller('DomainController', ['$scope', '$filter', 'domainsService', 'FormElements', 'clientsService', function($scope, $filter, domainsService, formElements, clientsService){
        $scope.clients  = {};
        $scope.domain   = {};
        $scope.selected = {};

        $scope.changeclient = function(option){
            $scope.selected = $filter("filter")($scope.clients, {_id: (option)})[0]
        }

        clientsService.list().success(function(clients){
            $scope.clients = clients || {};
        });

        $scope.submit = function(event){
            formElements.disable(true);
            domainsService.create($scope.domain).success(function(response, status){
                $scope.response = response;

                if (status === 201){
                    return location.href = "<?= $this->url(array(), "domains") ?>";
                }

                formElements.disable(false);
            });

            event.preventDefault();
        };
    }]);
</script>
